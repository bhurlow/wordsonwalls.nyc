{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mirror.tools, :imports nil, :requires {jsloader goog.net.jsloader, guri goog.Uri, reagent.core reagent.core, goog.net.jsloader goog.net.jsloader, r reagent.core, goog.Uri goog.Uri, mirror.util mirror.util, util mirror.util, cljs.reader cljs.reader, reader cljs.reader}, :uses {read-string cljs.reader}, :defs {setup-react {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 75, :column 11, :end-line 75, :end-column 22, :private true, :arglists (quote ([state render-fn]))}, :private true, :name mirror.tools/setup-react, :variadic false, :file "static/mirror/tools.cljc", :end-column 22, :method-params ([state render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state render-fn]))}, handle-ss-cmd {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 38, :column 11, :end-line 38, :end-column 24, :private true, :arglists (quote ([s]))}, :private true, :name mirror.tools/handle-ss-cmd, :variadic false, :file "static/mirror/tools.cljc", :end-column 24, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, state-atom {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([data])), :doc "returns an instrumented atom used to represent\n  state"}, :name mirror.tools/state-atom, :variadic false, :file "static/mirror/tools.cljc", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :doc "returns an instrumented atom used to represent\n  state"}, initialized {:name mirror.tools/initialized, :file "static/mirror/tools.cljc", :line 87, :column 1, :end-line 87, :end-column 21, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 87, :column 10, :end-line 87, :end-column 21}}, new-ws {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 60, :column 11, :end-line 60, :end-column 17, :private true, :arglists (quote ([]))}, :private true, :name mirror.tools/new-ws, :variadic false, :file "static/mirror/tools.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-ws {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 65, :column 11, :end-line 65, :end-column 18, :private true, :arglists (quote ([]))}, :private true, :name mirror.tools/init-ws, :variadic false, :file "static/mirror/tools.cljc", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-reload {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 20, :column 12, :end-line 20, :end-column 21, :private true, :arglists (quote ([path]))}, :private true, :name mirror.tools/on-reload, :variadic false, :file "static/mirror/tools.cljc", :end-column 21, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, ws-on-open {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 47, :column 11, :end-line 47, :end-column 21, :private true, :arglists (quote ([]))}, :private true, :name mirror.tools/ws-on-open, :variadic false, :file "static/mirror/tools.cljc", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, inject {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 89, :column 7, :end-line 89, :end-column 13, :arglists (quote ([state render-fn]))}, :name mirror.tools/inject, :variadic false, :file "static/mirror/tools.cljc", :end-column 13, :method-params ([state render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state render-fn]))}, ws-on-close {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 51, :column 11, :end-line 51, :end-column 22, :private true, :arglists (quote ([]))}, :private true, :name mirror.tools/ws-on-close, :variadic false, :file "static/mirror/tools.cljc", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, reload-js-file {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 25, :column 11, :end-line 25, :end-column 25, :arglists (quote ([path]))}, :name mirror.tools/reload-js-file, :variadic false, :file "static/mirror/tools.cljc", :end-column 25, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, ws-on-message {:protocol-inline nil, :meta {:file "/Users/pretzel/code/wordsonwalls.nyc/static/mirror/tools.cljc", :line 55, :column 11, :end-line 55, :end-column 24, :private true, :arglists (quote ([e]))}, :private true, :name mirror.tools/ws-on-message, :variadic false, :file "static/mirror/tools.cljc", :end-column 24, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}}, :require-macros nil, :doc nil}